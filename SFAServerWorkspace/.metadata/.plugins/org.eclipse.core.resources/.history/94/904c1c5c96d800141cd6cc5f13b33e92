package com.adam4.SFA;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

import com.adam4.irc.IRC;
import com.adam4.irc.ParsedMessage;

public class AI
{

	static Socket s;
	static PrintWriter output;
	static BufferedReader input;

	public static void main(String[] args)
	{

		String URL = "54.172.235.102";
		// String URL = "localhost";
		if (args.length > 0)
		{
			URL = args[0];
		}
		try
		{
			s = new Socket(URL, 9898);
			System.out.println("connected to: " + URL);
			output = new PrintWriter(new OutputStreamWriter(
					s.getOutputStream(), StandardCharsets.UTF_8), true);

			input = new BufferedReader(new InputStreamReader(s.getInputStream(), StandardCharsets.UTF_8.newDecoder()));
			output.write("PASS mypass \n");
			output.write("NICK TESTUSR \n");
			output.write("USER cristian@adam4.com javaTestClient v1.0.0 \n");
			output.flush();
			String str;
			while(input.ready())  //check for chars in buffer, assuming that they will end with an endline
			{
				handleMessage(IRC.parseLine(input.readLine()));
			}
			String consoleInput = "0";
			System.out.println("enter quit to exit");
			while (!s.isClosed())
			{
				
				output.write(consoleInput + '\n');
				output.flush();
				System.out.println("sent: " + consoleInput);
			}
			s.close();
			System.out.println("closed");
		}

		catch (IOException e)
		{
			e.printStackTrace();
		}

	}

	private static void handleMessage(ParsedMessage msg)
	{
		System.out.println("Ai Recieved: " + msg.toString());
		String switchStr = message.command.toUpperCase();
		
		switch (switchStr)	// requires java 7 to switch on string
		{
		
	}

	
}
